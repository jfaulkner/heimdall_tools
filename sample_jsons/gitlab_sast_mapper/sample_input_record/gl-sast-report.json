{
  "version": "3.0",
  "vulnerabilities": [
    {
      "id": "5bf298ca24cce031b707f4628af72a1ffb9ff261626b61fc002dc425b8de3766",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "RadarChart.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "RadarChart.js",
        "start_line": 34,
        "end_line": 34
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "5bf298ca24cce031b707f4628af72a1ffb9ff261626b61fc002dc425b8de3766",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "RadarChart.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "RadarChart.js",
        "start_line": 34,
        "end_line": 34
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "858c476c9c7bad78aa3558a56f8c187f00c0fb6854094ea3d58583c90be66e4a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "RadarChart.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "RadarChart.js",
        "start_line": 139,
        "end_line": 139
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "858c476c9c7bad78aa3558a56f8c187f00c0fb6854094ea3d58583c90be66e4a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "RadarChart.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "RadarChart.js",
        "start_line": 139,
        "end_line": 139
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "88180d3add93bd1c5fd11508c7befae9a2e281492cc4e163813ca818235b6a79",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "RadarChart.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "RadarChart.js",
        "start_line": 33,
        "end_line": 33
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b838a08547417e52846f3ef86fd10cf75a241c1dca5e7b510d4ba4d552e295d0",
      "category": "sast",
      "name": "Found non-literal argument to RegExp Constructor",
      "message": "Found non-literal argument to RegExp Constructor",
      "description": "RegExp() called with a variable, this might allow an attacker to DOS your application with a long-running regular expression.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-non-literal-regexp",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-non-literal-regexp",
          "value": "security/detect-non-literal-regexp",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-non-literal-regexp"
        }
      ]
    },
    {
      "id": "ff98e787376cd3f056f4476fc89e4bf55b05b495ea3b291ed4329746403104ea",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ff98e787376cd3f056f4476fc89e4bf55b05b495ea3b291ed4329746403104ea",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ff98e787376cd3f056f4476fc89e4bf55b05b495ea3b291ed4329746403104ea",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ff98e787376cd3f056f4476fc89e4bf55b05b495ea3b291ed4329746403104ea",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ff98e787376cd3f056f4476fc89e4bf55b05b495ea3b291ed4329746403104ea",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ff98e787376cd3f056f4476fc89e4bf55b05b495ea3b291ed4329746403104ea",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ff98e787376cd3f056f4476fc89e4bf55b05b495ea3b291ed4329746403104ea",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ff98e787376cd3f056f4476fc89e4bf55b05b495ea3b291ed4329746403104ea",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4d46548336f1c513f07be04bdd8984e6730f4f7b32f6aea3077b713fc4c43339",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/bootstrap.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/bootstrap.min.js",
        "start_line": 7,
        "end_line": 7
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "c5f9471e6424fc6b0338d3e66f086c92eebec1a66d43d1a6365313b9aaeb491b",
      "category": "sast",
      "name": "Found fs.open with non literal argument at index 0",
      "message": "Found fs.open with non literal argument at index 0",
      "description": "A variable is present in the filename argument of fs calls, this might allow an attacker to access anything on your system.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-non-literal-fs-filename",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1667,
        "end_line": 1667
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-non-literal-fs-filename",
          "value": "security/detect-non-literal-fs-filename",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-non-literal-fs-filename"
        }
      ]
    },
    {
      "id": "b62c23cdf5b0a7add8679fe22576609e4b6879ffac50e6eb58f86dc4230ad421",
      "category": "sast",
      "name": "Found non-literal argument to RegExp Constructor",
      "message": "Found non-literal argument to RegExp Constructor",
      "description": "RegExp() called with a variable, this might allow an attacker to DOS your application with a long-running regular expression.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-non-literal-regexp",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 8028,
        "end_line": 8028
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-non-literal-regexp",
          "value": "security/detect-non-literal-regexp",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-non-literal-regexp"
        }
      ]
    },
    {
      "id": "99f39bdbab8027e8ab2819df3d9184553bccb0a45decd5f9c57e2830779899fe",
      "category": "sast",
      "name": "Found non-literal argument to RegExp Constructor",
      "message": "Found non-literal argument to RegExp Constructor",
      "description": "RegExp() called with a variable, this might allow an attacker to DOS your application with a long-running regular expression.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-non-literal-regexp",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1692,
        "end_line": 1692
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-non-literal-regexp",
          "value": "security/detect-non-literal-regexp",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-non-literal-regexp"
        }
      ]
    },
    {
      "id": "cc9fc6353dd0dbb27606506d451132c218190088b2be14c8517a3f6a2aeb38bb",
      "category": "sast",
      "name": "Found non-literal argument to RegExp Constructor",
      "message": "Found non-literal argument to RegExp Constructor",
      "description": "RegExp() called with a variable, this might allow an attacker to DOS your application with a long-running regular expression.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-non-literal-regexp",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 982,
        "end_line": 982
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-non-literal-regexp",
          "value": "security/detect-non-literal-regexp",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-non-literal-regexp"
        }
      ]
    },
    {
      "id": "0e2fc3a1693ae38802d03fd302bb262b971214b9726a1d41d43aa84d6f50eb4a",
      "category": "sast",
      "name": "Found non-literal argument to RegExp Constructor",
      "message": "Found non-literal argument to RegExp Constructor",
      "description": "RegExp() called with a variable, this might allow an attacker to DOS your application with a long-running regular expression.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-non-literal-regexp",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 696,
        "end_line": 696
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-non-literal-regexp",
          "value": "security/detect-non-literal-regexp",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-non-literal-regexp"
        }
      ]
    },
    {
      "id": "bb8c48b5f78e9fd57fbf1f2ee1817d75f45da48c39937ef965ec167b9c41c10d",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 8032,
        "end_line": 8032
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "05e1e7e0224bf477850cf080bce45711ade6d288c9094b46e1e1a693be855378",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 40,
        "end_line": 40
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e5d289bb9ffb911b792b5141b0758c90d8a3c5bd02d19bd2b8263b80e146d3ef",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 41,
        "end_line": 41
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b53ae78b9ca9b0db601f0de8811f0d77d237c20792bb02d41428576ef8bfdd97",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 48,
        "end_line": 48
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a7c83dd865cf627810c5b2399efd56e801f1af481733be486e7512b650823ca3",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 49,
        "end_line": 49
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "06d7735ce16ce386526b8781057cb17ee2108d3c5d4dcd7c7644d48c58dda3db",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 54,
        "end_line": 54
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "c77044cf0d0461a7da38f75eaf72b601a01cda4c2814881c8f994bc880deff24",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 55,
        "end_line": 55
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4b0441ed91dc7623f1894dc3c1165b4bc84d85c39ad5cbbf4d8bba418a6589c3",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 65,
        "end_line": 65
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "da06f417938853b3a67502d40d505d9348ad924b0b03c0666d814af90c42dc13",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 67,
        "end_line": 67
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "bdd4229a1c9c374431e921d1a09fe9ab0fc282faf868bde07e0a19dc3fd9decd",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 77,
        "end_line": 77
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b6f208fb09c1a0bc03f9eb4479fee4719f230c923ef35d4b36f087ecef97259b",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 79,
        "end_line": 79
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "10421f8f12f032b4b7eda4623d157a99b526c2b8651d358df7c7be769509e51e",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 85,
        "end_line": 85
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d9f882fd48d7c6f20247576b77e056285cc6db6c3d974e07ecc9f663f9c40b7c",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 99,
        "end_line": 99
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "dd3773ed7644fbf270da96ab25306c46672d0507fd2adb74b2b92451fe46c28e",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 108,
        "end_line": 108
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a3b6b5b150805acedb61ea5646f4f7ce788c74c65b96d9bdda6465b83f0f5e14",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 123,
        "end_line": 123
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a3b6b5b150805acedb61ea5646f4f7ce788c74c65b96d9bdda6465b83f0f5e14",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 123,
        "end_line": 123
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a3b6b5b150805acedb61ea5646f4f7ce788c74c65b96d9bdda6465b83f0f5e14",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 123,
        "end_line": 123
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a3b6b5b150805acedb61ea5646f4f7ce788c74c65b96d9bdda6465b83f0f5e14",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 123,
        "end_line": 123
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b998cd6c951574b9bf7a9aeee294a034f889c2728837f840057e7a2fb2c9a6ad",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 129,
        "end_line": 129
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b998cd6c951574b9bf7a9aeee294a034f889c2728837f840057e7a2fb2c9a6ad",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 129,
        "end_line": 129
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3038438f1626d3a503ca8391e6cc85d0e484c116ebd548940f1173d88cbbc352",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 135,
        "end_line": 135
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2054886aac3fed5a0d7ac46a05a891585b9bd327b69a6b00bb616a20e871d638",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 136,
        "end_line": 136
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2054886aac3fed5a0d7ac46a05a891585b9bd327b69a6b00bb616a20e871d638",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 136,
        "end_line": 136
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2054886aac3fed5a0d7ac46a05a891585b9bd327b69a6b00bb616a20e871d638",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 136,
        "end_line": 136
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "aed106e869c30091ae9b19057dd97ad420dddf4734e0cdbca526f7f0693b848b",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 154,
        "end_line": 154
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9c96cff30d0b51245db9fca680c7c175fcdb74841800cc6fb4fd4a89ad4cb60c",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 161,
        "end_line": 161
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b5595041deb2da2334c01ef8ace0ae9474a5985ab3e4ecf399f47d242ed37f09",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 191,
        "end_line": 191
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7110b4d109295afcd700d854e47421089f158e0eda4b1634f6602f856d64d556",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 201,
        "end_line": 201
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "577ccd34252048765318205492a1bd9f3bfa9be18d78da14e0d097c33ef7610f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 217,
        "end_line": 217
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "58aeb2edd852daad4c5c9d0e41cd0a851e908f70c159f9975f6b0783665e22bd",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 246,
        "end_line": 246
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d27fa9151b14a818e715470bd7567975a741596bac68e7c41f7a9ae3377f3901",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 258,
        "end_line": 258
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "93e54455c750c01844c408eea61b9c13e70121765a16fe94f59791dbcbaef5f9",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 272,
        "end_line": 272
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ee56c64c1ba77d2752f3777ca7b378036f3e05beecf1d0b028c9fb82fa70ac7a",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 317,
        "end_line": 317
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "0161d41094046579bb0b12af6f4dba79a05a5b9dd3fab3928eff3ec1f9b5a6fa",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 331,
        "end_line": 331
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e9fcea63b97462643684afbd20803cae9d089b567a305d16c4057c3e078b1296",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 351,
        "end_line": 351
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "644cb1e631efc9ca4d8fbdcaab03a9aa813871ea0a7c41a8cea5c3674f1b74fc",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 351,
        "end_line": 351
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ada65411427ff07d9eb9e02a6b048b2aed4803a772c56bee24421e95bea5c605",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 38,
        "end_line": 38
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "53a32adb6fe86c7cfebe028b8ad4274915dfdc4667801538efae9dd792ab21dd",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 372,
        "end_line": 372
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "53a32adb6fe86c7cfebe028b8ad4274915dfdc4667801538efae9dd792ab21dd",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 372,
        "end_line": 372
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "78e52dd200f95f0a62ef62abc0bf133304d7dc930c771c71878c65f2a49bc82f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 375,
        "end_line": 375
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "032b26f7861529e5baa639a8a58e431ba9d86b2327bec5c36fe911f262301290",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 384,
        "end_line": 384
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6d50f73d8be228f5779a3c839ec5f4c3f7150e1fa0d8321e808932476a3de9c2",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 424,
        "end_line": 424
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6cfffc2078893238e37bedf793455b2cc41a3e115f7233236642e04d841020a4",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 469,
        "end_line": 469
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "24d7e5f4308e66b72f2007c4ced44f9a4bfa57419b6f6b4d898c108b3230c332",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 483,
        "end_line": 483
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "24d7e5f4308e66b72f2007c4ced44f9a4bfa57419b6f6b4d898c108b3230c332",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 483,
        "end_line": 483
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e739fdedbd67e9afe2c3772b4c26ca5e30f6144c6b321433a3fcea670ad9689b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 579,
        "end_line": 579
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4c3a4a4cd2b49e173c4fd6abedd9efd7dad6d1b16492aa3a9842693603c67338",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 581,
        "end_line": 581
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "58bdff8a105e55101a3cfa26294499545a42d108de50dad05587edd080ea29cd",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 600,
        "end_line": 600
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2d38ef5614c11d4d8b70302d2e7851151256e90905df558e537dafb401efb9f3",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 601,
        "end_line": 601
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "86a7461dc395c11e40810901b2675e6dc61ee9ae48d737be3d167741ee4433bc",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 630,
        "end_line": 630
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "c72a3db5a15f72759973b6ba76227a4ae4dee303a51fdc1af9d68dae96e6aac5",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 642,
        "end_line": 642
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "5876326d91e56fbd9f414eac6f697ae9d3a3a64f0b173eb3c9268e30e7ecc5cc",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 683,
        "end_line": 683
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "63b3599fdff2b0aa38c4407f5726edda27536c7131c2c8a8761888c67921da5a",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 686,
        "end_line": 686
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "fe638c4bb104b33235f638c09dad8c953be3013f5e6316c4268b033b10024348",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 690,
        "end_line": 690
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "754e1812c2309eeb4cdda2cc69b1669accbaabbc35e8181f5ab831daaf95a3e8",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 37,
        "end_line": 37
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9932d11bcd175dcc20f6c1abbd1eb079d33e2d31355df955551627004d9171e6",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 703,
        "end_line": 703
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "67013dc7e2d3de7432b3eaa08812b1a4dcb2f23ac66877f556a138c28cc80b48",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 707,
        "end_line": 707
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a0d54e590d296bc795f943ab0c4edc96cbbacd66a38130dad4befc508157e8d6",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 729,
        "end_line": 729
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cfc9393222c618c09960807587514e8b42af3883bb845bec3d45f7a10701c684",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 752,
        "end_line": 752
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "8fabef9f97568c18997699f9c6044f19a303ec0aacf123bd09285a249b9553ed",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 753,
        "end_line": 753
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "78ed140f9048369b9abe46c2149186af82537fd2ae8e7d52f5e1b12af22d291a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 760,
        "end_line": 760
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "8af06e69a16d18df83a76a42e1312fcd8e3a14b68e4010d39a187f5336b96ac7",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 763,
        "end_line": 763
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "aac206bff05a2c401b6854ae54e4a7a1133f00a6c02e6e94dfb35019dbba0c38",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 767,
        "end_line": 767
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "aac206bff05a2c401b6854ae54e4a7a1133f00a6c02e6e94dfb35019dbba0c38",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 767,
        "end_line": 767
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f1b728de5f693875a53fd77f043c25825b5b42b1aee2a0169eedcff2249dddae",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 823,
        "end_line": 823
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6db81212cf8c1305e1771496c6edfdfb9af124f2a7df22a20897816c9dfcad89",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 824,
        "end_line": 824
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9074d3c63e0b93a2718ac35bb570b08bd44fe31bead45b26f21e9b15e6553960",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 834,
        "end_line": 834
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "92f1aeede7a0ccbd4a1bfdbb8288193654a6e8fd85a9c926e61fa6f9a02b5dd2",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 836,
        "end_line": 836
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "414a1563df9b973608cc7b1d0352c64813a7af14fa138a5048ec491b624b2231",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 843,
        "end_line": 843
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d8eb77d3bcd0a7aebf3d8f204e7d2a4da9e2d6a2724a6c8d5e2250e4cbaa3bc5",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 845,
        "end_line": 845
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "8f7823bcd98492d3ad4c8d12252327b4ff2c2e092d2364930e1d04965b15e48e",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 848,
        "end_line": 848
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e02583072d5ca8e268ffe663e5093dc05cf99fd2ee396a73537109275620860a",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 854,
        "end_line": 854
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "38ff00843d5b169bd3e9f042567f57bfa46787e28990624b0dca22cfebfb1375",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 855,
        "end_line": 855
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "38ff00843d5b169bd3e9f042567f57bfa46787e28990624b0dca22cfebfb1375",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 855,
        "end_line": 855
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "563d76d0d06aec65e44dff16a97b32044bae881dc63b1b1284a6a3fd8342b1f1",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 860,
        "end_line": 860
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "8b78bf97b3d7e6c2cba17b9810a02bee4d04e8739282204bfeeb9f36327e0d8b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 861,
        "end_line": 861
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "fff246048c7d0abf8dad72cc047a3bca12a85080ecc6df1ee7757bcfd01e0dad",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 864,
        "end_line": 864
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "399b41bea55085347e7c4e6db835a7902fdee6de44b218327296a8eca4b29001",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 866,
        "end_line": 866
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "01bdb9b140976e8479e8b6523bbf3787ad492fed9d773694f4a7cf1027336514",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 870,
        "end_line": 870
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f257da5c8003516848783f4203692dfa8a08f85bf85be8388f8e25f35175d805",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 870,
        "end_line": 870
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "fc2e02ea86484317e3a27ea4f61504b78132fa0ca2482c291062a8ffba648f67",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 873,
        "end_line": 873
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "fc2e02ea86484317e3a27ea4f61504b78132fa0ca2482c291062a8ffba648f67",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 873,
        "end_line": 873
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e92aae66fc426ec593a95f6b43b00245c528d3a55e7be2187d7c7603d0fbe31a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 885,
        "end_line": 885
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7c8766fdaf3712407f8ee57a8a37b1e76d0e081da51a0849c9fd592298de5106",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 889,
        "end_line": 889
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f8b2186cc629aaa804cbe8910a58753148abecc62e37f452495a2a3e15d94428",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 913,
        "end_line": 913
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6a6c40436da90961d79ddf57f3000d462cd2c80461fcf1448db9dcf45e7f8a21",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 915,
        "end_line": 915
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3c65665c4ae603ea6bd31542ae3be276893dde88da80872c02850ad031953202",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 929,
        "end_line": 929
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3c65665c4ae603ea6bd31542ae3be276893dde88da80872c02850ad031953202",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 929,
        "end_line": 929
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "c1e9383b47c1d261b15032199723da849ac6182478bfebe04ba67e499f658520",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 930,
        "end_line": 930
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9d1da13c07893017b4845b9b6927038a2586c38563474ebfa9552768ff33e803",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 940,
        "end_line": 940
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7a0ea3ac26786c814c1c50877c805f14000f911a177990d1b17d04a926583116",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 955,
        "end_line": 955
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3cbedb55b5a912926f827523fe8096d32da6c49a6390f466c022d7ab255994d5",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 969,
        "end_line": 969
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d1f8b6bb6d8b73f4ae6be402a601414a383ace7c24aaa921018e7a38c9780cdc",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 972,
        "end_line": 972
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "dce90c77f9d2048adc0f296a4679fb6be93ce58123ddec8fc7fdd591e5e64735",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 978,
        "end_line": 978
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "db6488d5d30c196464c60eb46da69c55f76c6a937caf1c9c1645ae46e1594587",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 30,
        "end_line": 30
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3294c7424457eb1b52836955336d0a3c9567e5b8ce07d025aa2d47eafb441202",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 985,
        "end_line": 985
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "0a2d33c2e81875f441fc6ba195e44c34deaadc9221a4bfef649a27bd65f4494f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 987,
        "end_line": 987
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cf55d4c2bd63805c68bbcf496a41a796c2686bd2e1c23e4f20c9c2376ff1e3b4",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1028,
        "end_line": 1028
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "02291290c6b3cf9ad8757d61b01bf0f98064252a4fc89a2f3347af7310992eae",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1029,
        "end_line": 1029
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "85b3e2cfb507afc053efe05560c904421430d8d186f872dd8fa1ce6a0debb5f8",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1044,
        "end_line": 1044
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "94a8717dfa13c23576fb56656fd2774f71dcc36166619bf89e0d20b73ed4ac46",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1045,
        "end_line": 1045
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "0ed7a95e586cdcf6b72dee2ad128177dab48ca75eebbfd0b32264653acec6a1b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1065,
        "end_line": 1065
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3ff4356ccca1186dbde63d906b886e343943020457710c061ff9095c3b597e43",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1069,
        "end_line": 1069
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4c26abc326e486999e493b82c936a1432740cfe66840e3475ea27aa325f08980",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1070,
        "end_line": 1070
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e3ff84149fdc52e3f28821c61ddaf34d54d4d75b334552aceda4f24ee651d26a",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1084,
        "end_line": 1084
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b010aafdbe3bc38ba6dc0ce0fca26cf69496d03033b48e5ce8817c9d89cc760c",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1085,
        "end_line": 1085
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b945ed4f596765ed213f3ae895e41378b86efa8359fe8800df05088d1235f89c",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 8337,
        "end_line": 8337
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "48827f8d12eb5efe55663a680c719d59a8a8d0e1c89e2cd7a050bfb566c66bdd",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1647,
        "end_line": 1647
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6340e4f883be9c161d7b7b27622310c6544fc5006648023b16474620b164b54b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1648,
        "end_line": 1648
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6340e4f883be9c161d7b7b27622310c6544fc5006648023b16474620b164b54b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1648,
        "end_line": 1648
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "db9c1c6f2c6caf440893f64059e00982043d9030316524f147e2d0773b36b850",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1661,
        "end_line": 1661
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "0c24cdce7392e004dc151d3c85f6e271127ac4a0d09ee5b4738de114d5c7d1db",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 29,
        "end_line": 29
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "8c4b1167847cc39ed4be86919a8042afce16a625192d247e25427a55cb696ac0",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1669,
        "end_line": 1669
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "55fa12048fa7d9d2bd70e05fd75e159c8750bb731bb3299010f1410151e6c999",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 362,
        "end_line": 362
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b21834d3e63cdd4fde6d2c4ee18d70093099e6927f1bb71170f7870a35a73798",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1778,
        "end_line": 1778
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7fec641ec7d08d6dd4bb24a38cec5d7a58fbb6093ac000944ec87402ddf64856",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 8314,
        "end_line": 8314
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f2e113cca659b68f8df2e72770756ef3777db2bb76d4ec00a6d40c660dbb0dda",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2024,
        "end_line": 2024
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b471fe2618fe16994d6514d3192711bfb18801615a609805ed8a1c32cdf83229",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2037,
        "end_line": 2037
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "621c8cf5e25ad0fde8890d8d1a4ff2fdb36067f8e273fca0fb092acdbb1a7a62",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2044,
        "end_line": 2044
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cdbdf9e61e3621b66108270a1fb33bc8bd3f0b6ff28a9fea9e378621246ef81e",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2051,
        "end_line": 2051
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e1cac858ba30333e542004d6b5bf557ce356c19d9bf84ef149bbdf5375b6f9fd",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2055,
        "end_line": 2055
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b60663662ac91f28e2cc5df68a158de3d95ededd8ed683a1834ff9047a39f684",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2061,
        "end_line": 2061
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9d4ad4cd1a38755a4655c641fad2bf4713437d36cdf7115134660bad0ce60f7b",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2067,
        "end_line": 2067
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7820ef82608306f1bfee8747582f6775f2de63efa9d917f08869ee9ffc580f99",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2259,
        "end_line": 2259
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ca3db955807e7fa4c0359df53b671f94b01f47d2a22584d86a330046fc1dae2d",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2262,
        "end_line": 2262
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4a3a6fa69cc9d74b614757009567788f02f9e12053c256ae5b0a62cd15fccec6",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2309,
        "end_line": 2309
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a4d30f9e02f0a0918000f48f9b70224a13600aa34497b506336c605725176059",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2321,
        "end_line": 2321
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4b4c17ab80fe254f3085154af2c898d8dc429f212651ffd53249043d4c8d6690",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2329,
        "end_line": 2329
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f173379241eb9cb02ce693dc64ec5810d653be6001602e6b98b81e52590c54e1",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2345,
        "end_line": 2345
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2f0a64e6a55e434432a8fd1bb3f7ac9fd26aace44b71cde9fa1f6f620468ab22",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2431,
        "end_line": 2431
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "836dcdbe04fcd0b879fb1a87ffc7527d066466ad600a568eaf27df04e5f768a8",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2469,
        "end_line": 2469
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ecb7ff0daf9171be7ff586f5ffbd0153a89555195fe6e016eab164d5a37d9ef4",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2681,
        "end_line": 2681
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "26e86068bc46b0388c3cb4a3f8d15260f17b08ac4f3ecdd8d3771e60a30685e6",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 2682,
        "end_line": 2682
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "674ae63c542db1bfe7ec1958c14b64216560e63ba01d38d1dadfcede95ed2617",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3691,
        "end_line": 3691
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6f682f6a66d7c99b37c409d49c7288d23d1d0f8f65eb526c7ea237e2142ce06e",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3763,
        "end_line": 3763
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "87fd58d483aec8dd9bf4ad9d42e6dd20e718f12623005c5b4d4b701175845dd1",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3768,
        "end_line": 3768
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "50eb8d6e8bc292bf840b17b3ea0905fd493297c09eaf067a00de4b182c0268be",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3793,
        "end_line": 3793
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4f547b173f9c2d2443e853f1862d0400f55e4ae842badb40902d7cb27274c2f7",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3797,
        "end_line": 3797
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "472bfd8ed85cf858f6dbe5144e1003462dee00c9283b4276cb34e23c41e217d6",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3798,
        "end_line": 3798
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e194a6e1f834324ae56c43159d8f23af560a179e405615caf6df21f05307688e",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3803,
        "end_line": 3803
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e60798f552f8187c7ced033557e1a56a2baa47c60b1cedde7893cee0fb5d3d04",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3813,
        "end_line": 3813
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "bdd52ea02603c95c1b9412a3015b0496430ef8750d93f14ac0fca1d7d77cd25b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3823,
        "end_line": 3823
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9a29741bf2a03f996fa7f41c5c0cdd2a9cec898bb5a3399b7dcf4f893ed507da",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3844,
        "end_line": 3844
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "72119953dbb8afc6b222db9f5fdc10d158bc167913909b4c1db8d3e23d1d9e81",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3851,
        "end_line": 3851
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4a36990de301aed0906e1f750717e005b490b8f10cdb246c45127eb9ba0136c6",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3882,
        "end_line": 3882
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4a36990de301aed0906e1f750717e005b490b8f10cdb246c45127eb9ba0136c6",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3882,
        "end_line": 3882
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "69436578262b6847131fa3bdaef9dcd6b7673f97dc162f2dcc0bdbb751c0fbd4",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3884,
        "end_line": 3884
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "179706ef5e34e2f6665656ac15cdcc1b38dc112954ebc4d144548f51e1399e5f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3905,
        "end_line": 3905
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e96925882f3d933449705b843cd860428a4b6e5ec24fd88c41f66f0f11ba367a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3907,
        "end_line": 3907
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f29fda010f8d31e6fd167fbc16c8b9bccb371156832f6e4dbf786498a82abfef",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3913,
        "end_line": 3913
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2726e833cbd5d7379ed16fcdb61f75c81b595a42e42098bb797c8b288c6195de",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3915,
        "end_line": 3915
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "1c09895279a2fc814a757fe23c94d83c704efa9e27f6d8ed22f85122ecd97401",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3917,
        "end_line": 3917
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "480c91f62692dd83df16fd26de588279db55eb2df4fea616ff496d759fbddc63",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3922,
        "end_line": 3922
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f6bc0d04e2ee54bfd286f17c5eda0b7ea09990485381f1fd2db6d27136934f33",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3929,
        "end_line": 3929
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f6bc0d04e2ee54bfd286f17c5eda0b7ea09990485381f1fd2db6d27136934f33",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3929,
        "end_line": 3929
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3e8b502f9c556278df4e3d2b18e50daf421fd136bd1fcfe96636e01bff62fe6b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3930,
        "end_line": 3930
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "c5889799b4dfd0fba6bad417295c14d49ebf30b071c5131aa1c59edeeafeb8aa",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3945,
        "end_line": 3945
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4df335226fb73544cba1e637e604ba53c090380a6c3db02ef1a1652742e9c3d2",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3948,
        "end_line": 3948
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4df335226fb73544cba1e637e604ba53c090380a6c3db02ef1a1652742e9c3d2",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3948,
        "end_line": 3948
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "bc1f404d539e70f84788a6fb931842921e78e288169f1369d19ac91c8a692042",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3950,
        "end_line": 3950
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "bc1f404d539e70f84788a6fb931842921e78e288169f1369d19ac91c8a692042",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3950,
        "end_line": 3950
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f05b6c4ec126179d9cc4dc21c4e5307eca1d30377473bce643008b77ccfb255e",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3951,
        "end_line": 3951
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f05b6c4ec126179d9cc4dc21c4e5307eca1d30377473bce643008b77ccfb255e",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3951,
        "end_line": 3951
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f87a4b156d6ef8684913cf83bc0b5f9ca8b4f94dc542307222fe4d810b94aadc",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3956,
        "end_line": 3956
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f87a4b156d6ef8684913cf83bc0b5f9ca8b4f94dc542307222fe4d810b94aadc",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3956,
        "end_line": 3956
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2284b0af48eefae5fea0558bbeefbdd09df7ff031dd90d0f08ad191431e02073",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3957,
        "end_line": 3957
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2284b0af48eefae5fea0558bbeefbdd09df7ff031dd90d0f08ad191431e02073",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3957,
        "end_line": 3957
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "481905db12404d675a5ffd55a9581d768dd4b7811a36745d1e5b6f6c2187f49f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3970,
        "end_line": 3970
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cd26f54cfe1a9c82798a0031890c12bca9285f45f78ae13b1c6854008558af5d",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3971,
        "end_line": 3971
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3614ac7cd49e4ed75608d8648e44a913737b975870b619db415a3171fd642e85",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3972,
        "end_line": 3972
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3614ac7cd49e4ed75608d8648e44a913737b975870b619db415a3171fd642e85",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3972,
        "end_line": 3972
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "60e0bf951b9694b3948f69162ac9cc968f02076315534486036b5396bff7ef12",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3973,
        "end_line": 3973
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "60e0bf951b9694b3948f69162ac9cc968f02076315534486036b5396bff7ef12",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3973,
        "end_line": 3973
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "1a872350876d41e38372b2ad7fddcf54d61cd487c86b602898436072e5fc327f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3974,
        "end_line": 3974
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "1a872350876d41e38372b2ad7fddcf54d61cd487c86b602898436072e5fc327f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3974,
        "end_line": 3974
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3f132a0d87c5224828445b07b32d096fe5b05ad5c1391a03cbb11d8e9ce1f315",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3975,
        "end_line": 3975
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3f132a0d87c5224828445b07b32d096fe5b05ad5c1391a03cbb11d8e9ce1f315",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3975,
        "end_line": 3975
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b70f41e7a445ba01654c6f9a52f648b4017e6474f7b31048449d541b820ecb09",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3977,
        "end_line": 3977
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "403734b8681feef058501dd92d3906b11ed26b37935b678f7849c8b03250c664",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3979,
        "end_line": 3979
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "0da07de1806a43ec7e9aaa11c4753b52baf4e63c8edcbe76b88d280111deef3e",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3980,
        "end_line": 3980
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "54ab9692a1a78af5773bd5fd266e279973831c311da519f1d5d0e3dc428563e4",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3985,
        "end_line": 3985
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "694bc09d775fb1c2dc65d38d58a00eff2a01b4d6f141edf4afab6ff28aecb812",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3992,
        "end_line": 3992
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6b9f21687e3601c8c4c6e284d67f9445cf67f1c000c1cfdb90326176145fcba8",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3993,
        "end_line": 3993
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3bca249831a70dcab4349899e0aab4f55b8eeae5352d859ccd75e21ae6a29538",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 3999,
        "end_line": 3999
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f02bd3584740f2b9d1437410286a28f6ae654d9c7e214545dd0bb8a2e821bced",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4000,
        "end_line": 4000
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "61c06cbf4f889c66d9f6e3a32eed9f0716c9a36efadb1b8c49eca6dbd84087b9",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4003,
        "end_line": 4003
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "dcbf61424f8854886f89555bf11ccb01c855b6a78dcd85e4d1cc9e89145a8d36",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4007,
        "end_line": 4007
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a95fabe069afb4eee1a8157c44a2b0d27df4311ea4ac8c0e94862bf0a95b302f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4021,
        "end_line": 4021
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "18094fd5a99e53a5fc7829acaad219b3330800e2a74a78d3d8b7146a13f3451c",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4024,
        "end_line": 4024
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ed041ecae26642dae8afd49a76b04a7415282125125b645c52bee5ffc36706c2",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4027,
        "end_line": 4027
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "70d15bb829866064f69eb362c7b2a678efb8bfea6ba0353bf78dc6a2855f4c5e",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4036,
        "end_line": 4036
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "70d15bb829866064f69eb362c7b2a678efb8bfea6ba0353bf78dc6a2855f4c5e",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4036,
        "end_line": 4036
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "34a26002697aa859ea98146ab229632c3a3df67e5a7468877d9b480c05db6cd8",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4045,
        "end_line": 4045
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "06b94cc6344731375a2d74604d7ea71ec937ea81e9542f7c15e85057a74d340c",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4057,
        "end_line": 4057
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d9a6b84729daceb3056dd4c65285169701309821296f332eb3548f342072deb1",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4061,
        "end_line": 4061
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "c91b2c0d95cbc1e2c1c29fd13221261a54df3ab757ab2a25bfac06dc34dee229",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4093,
        "end_line": 4093
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "db2a8a26418ff6f93d05a743b06f75607ad326bc46b82e3188e43d25568d54c1",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4101,
        "end_line": 4101
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "1fe38cc45856161131e6394a9b626085b739b056b1ca695f2211aa181953c4e8",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4115,
        "end_line": 4115
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d0a61843eb1f87d7d1c6fbafc25fc0c09e03b8794644cd2aee05535ce386ffba",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4142,
        "end_line": 4142
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d0a61843eb1f87d7d1c6fbafc25fc0c09e03b8794644cd2aee05535ce386ffba",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4142,
        "end_line": 4142
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "52269f76d656f8dadcce749422fa567be125a186496c421660b20f4ae9a73a30",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4145,
        "end_line": 4145
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "52269f76d656f8dadcce749422fa567be125a186496c421660b20f4ae9a73a30",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4145,
        "end_line": 4145
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f93dc17ebdaed7c86bb26c1f65f2f499b55ed0a535893ed99d555a1525ef1586",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4148,
        "end_line": 4148
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a8945fce5a9c004c1ddbe2551dcf7ca85dd7ac84b736811fb2ae8d2379702ae7",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4150,
        "end_line": 4150
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b6e39d699c061ddb18f76ed160762777a010359cc607f496e7dcd614f8f9c272",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4157,
        "end_line": 4157
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "873ec428c6247985e22bd7e55110fa559b1142dc36edc6e08dee7126a700628f",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4174,
        "end_line": 4174
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "47ba87cc42abd0cb9c4061d9b3611764ae2752f7f0534ece5fcbf67f1ea93a09",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4175,
        "end_line": 4175
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "47ba87cc42abd0cb9c4061d9b3611764ae2752f7f0534ece5fcbf67f1ea93a09",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4175,
        "end_line": 4175
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "740f914b6a227f90110290c6c2efd120603337325be19f0cc7091652f4b59fc5",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4199,
        "end_line": 4199
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "017990b9bea3bafc7ec4540db19a95631f0453f792a0157883a6b89642235d3d",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4203,
        "end_line": 4203
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "017990b9bea3bafc7ec4540db19a95631f0453f792a0157883a6b89642235d3d",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4203,
        "end_line": 4203
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b9a524abb04297451513e96171a0bdd2fa2e0c7a93e21babce3330eadf8caf9c",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4204,
        "end_line": 4204
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b9a524abb04297451513e96171a0bdd2fa2e0c7a93e21babce3330eadf8caf9c",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4204,
        "end_line": 4204
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b9a524abb04297451513e96171a0bdd2fa2e0c7a93e21babce3330eadf8caf9c",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4204,
        "end_line": 4204
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b9a524abb04297451513e96171a0bdd2fa2e0c7a93e21babce3330eadf8caf9c",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4204,
        "end_line": 4204
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9bf963c278cf95fcea697da66e4e3d68634976e270cba36361820631b7fdbc20",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4206,
        "end_line": 4206
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3c3d71626a246257426afaa8361cd46fe92a804af763a575fddd027d81aadddd",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4207,
        "end_line": 4207
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7322c622f94a6b35f7b31f965c9789f0d979a3f4a370aa71588323c4bbf136f4",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4216,
        "end_line": 4216
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ac172fcb67c2fc28419a5dd7e66c7cc4d14cc0245c49d4642c6aab3f816acf4a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4383,
        "end_line": 4383
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "45df8bd312d65614ba90a9d8b69250bc6455e63b2de4671675634041ee522851",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4384,
        "end_line": 4384
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "dca02741bc9e740f6419721934b4bf6c4ae76d2e5274483383a183e0543a3c47",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4398,
        "end_line": 4398
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4c5f693f01c4f270a5f42bb6dd6a1cf23163e511ea8e1ab0aaaf7dac36eef8a6",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4408,
        "end_line": 4408
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e1bb65554c06f6ae42c9f31351f52654d90d6d2b4312f58a28ea10562e9fda1d",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4416,
        "end_line": 4416
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d47c7aec71e9474081d18389903be116cf1f81c41cc8386bf8750617a6317171",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4484,
        "end_line": 4484
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9500558f00f9818a0b7ab8fefdcddf763b53ed9c55c4f5de9fa0ffe2ff831be5",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4523,
        "end_line": 4523
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6b9ccf5c47b92d16a183141d916a6fdd9872c1399240a170956e33459674ffe8",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4531,
        "end_line": 4531
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7421e646eb3a1c9c86a1b7882462968f7bfc16a1269f0c85339a40176dbfd638",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4565,
        "end_line": 4565
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7421e646eb3a1c9c86a1b7882462968f7bfc16a1269f0c85339a40176dbfd638",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4565,
        "end_line": 4565
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "c728448a602cb5e4a0930a56d4bc27b768420f44407fbb846063675eb4e3bc21",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4580,
        "end_line": 4580
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "c728448a602cb5e4a0930a56d4bc27b768420f44407fbb846063675eb4e3bc21",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4580,
        "end_line": 4580
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "c728448a602cb5e4a0930a56d4bc27b768420f44407fbb846063675eb4e3bc21",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4580,
        "end_line": 4580
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b7e325c74be125924e873de8e8646c452eaeb5dcc063d81e082b4d45ce5b6c00",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4742,
        "end_line": 4742
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a1282e0b7afd1f9994f9d63dd207366c9785048ad2462aaabec9ccbde71cbd52",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4751,
        "end_line": 4751
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "40fdbeae29e7a27ec3a48fd5af27fab8a3d2bf74314cf41cfed8e90110cebeeb",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4751,
        "end_line": 4751
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "40fdbeae29e7a27ec3a48fd5af27fab8a3d2bf74314cf41cfed8e90110cebeeb",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4751,
        "end_line": 4751
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3d4b0a2783ffe9a3c8661e08b7744f66778e68c9223c37a97bc995b634456ed3",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4753,
        "end_line": 4753
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3d4b0a2783ffe9a3c8661e08b7744f66778e68c9223c37a97bc995b634456ed3",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4753,
        "end_line": 4753
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "afc006dde8974a5c83273109c7e6797b9ecdfec5eaeb0896bb60535b647237f8",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4758,
        "end_line": 4758
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "afc006dde8974a5c83273109c7e6797b9ecdfec5eaeb0896bb60535b647237f8",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4758,
        "end_line": 4758
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "c146e683e6269b7b1c4cfe1f363c52832051b2d66f668bd018d82d5918b4b457",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4762,
        "end_line": 4762
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "40b1c5ef7c8b6f1e32f931ba620ffb87b9db3417b136505aee11068cd5df91f5",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4762,
        "end_line": 4762
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d7a930e535fab7b24f9625b94018e63fceb038a159496314becf4e6de522d179",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4782,
        "end_line": 4782
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "5d37c1812365363ce892ec361b5c2c06d95a2103c3fed0a6a10392fa683162fd",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4788,
        "end_line": 4788
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "21b7369881ec0fd2311e193c083fc2091f0ee8d713c49a0f926358c22976a72b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4792,
        "end_line": 4792
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3df43060a773fbb6cc3f39b25b61e05706eff1b11601883e0a52d95f3c3090fb",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4800,
        "end_line": 4800
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "abe2ca531344ef7363e3a82ce0c59a0d32c9aa1e1863c52d5d3eb49ca7ed97f6",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4826,
        "end_line": 4826
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "c14df739bbf0d54ace1e2741f0c0e24a84429c1af81d762f2423dce3eef3863f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 8313,
        "end_line": 8313
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "625d5fbb304b164fa1a5c81599aa87e5d1adf9d02f72ea10df906b96802b56a3",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4834,
        "end_line": 4834
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "77c70afcde2902a30d7b559b23154cde93c9f3a7da13585c6d16080482cd357c",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4847,
        "end_line": 4847
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "77c70afcde2902a30d7b559b23154cde93c9f3a7da13585c6d16080482cd357c",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4847,
        "end_line": 4847
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7e36e310b3130ddf03db8da484071b6055915a8f16df608274902aad2201c6ed",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4848,
        "end_line": 4848
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7e36e310b3130ddf03db8da484071b6055915a8f16df608274902aad2201c6ed",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4848,
        "end_line": 4848
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cadf7045b52001bc18e8b3c2250c3c04c47f0fed408892eb87b1ff88ee825d7a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4849,
        "end_line": 4849
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cadf7045b52001bc18e8b3c2250c3c04c47f0fed408892eb87b1ff88ee825d7a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4849,
        "end_line": 4849
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "068b9e46771cf724562e082a863b4ebe788d82d10efc1252c8bfe394dc48ca69",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4851,
        "end_line": 4851
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6473e11532d94be4f6d1b9c7f922334f7188ac92cb6e65620b1eb3c4cd36a936",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4851,
        "end_line": 4851
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "588b018fa0d3ca8bf4fab8b76c1d0cc250d40d823568d63eb7ec5f6278b48894",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5006,
        "end_line": 5006
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a6018eab695b991b70df11edbac6c909e56077520e423f041dd804b2facaf0cc",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5053,
        "end_line": 5053
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a6018eab695b991b70df11edbac6c909e56077520e423f041dd804b2facaf0cc",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5053,
        "end_line": 5053
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "fcadd6b9de659dbaca3774ccd75db0b45f1ccc7b40883944b6b37d3f7c3c5803",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5061,
        "end_line": 5061
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "fcadd6b9de659dbaca3774ccd75db0b45f1ccc7b40883944b6b37d3f7c3c5803",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5061,
        "end_line": 5061
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d886b02e91235d6103586bf6a51b3d6658d09aa6c00288bb328f2c5f28ccb689",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5067,
        "end_line": 5067
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "940eeafbf313f28de3d9df3a63e78ce4c1787882c66d352d15fd217e45bd836d",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5067,
        "end_line": 5067
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d886b02e91235d6103586bf6a51b3d6658d09aa6c00288bb328f2c5f28ccb689",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5067,
        "end_line": 5067
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "940eeafbf313f28de3d9df3a63e78ce4c1787882c66d352d15fd217e45bd836d",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5067,
        "end_line": 5067
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "da5003d0393e84adde0f475d1843b80566509cad424ca47bb42bf2fcc0379e83",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5076,
        "end_line": 5076
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "da5003d0393e84adde0f475d1843b80566509cad424ca47bb42bf2fcc0379e83",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5076,
        "end_line": 5076
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "60f5879f5aca71c834ce7091566f8b068036ab3beddefbd7c982eefc66bd3909",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5076,
        "end_line": 5076
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "da5003d0393e84adde0f475d1843b80566509cad424ca47bb42bf2fcc0379e83",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5076,
        "end_line": 5076
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "60f5879f5aca71c834ce7091566f8b068036ab3beddefbd7c982eefc66bd3909",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5076,
        "end_line": 5076
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d6b68a5d3f65dd7c997c0135632f90693366ade8f81ad23ddb75b1df435ce32c",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 27,
        "end_line": 27
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "49c0ac533237308fa5d68fafad12f577a5b1d892b24020e8cbdca672e3e30d68",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5187,
        "end_line": 5187
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ea695dbebf9b29b72af5b7326d9d1a98f1f3816eb66f2aeec4d20134fcde0487",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5193,
        "end_line": 5193
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ea695dbebf9b29b72af5b7326d9d1a98f1f3816eb66f2aeec4d20134fcde0487",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5193,
        "end_line": 5193
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d4666c641e1552808c5140a18ccfdbc9b6c9b522d1b48842044c04273178fa10",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5207,
        "end_line": 5207
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6b1ae9301410a3fa3bd53e27886b05b5945a88c2ef112c8b5dffa5b23bc12012",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5216,
        "end_line": 5216
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e1eded3a4a7bfad8ee7f86793202cae27513726d3808e2eda53c9c568da494d9",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5223,
        "end_line": 5223
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3f941dd9e459a1f16afcc823fa2f862ce7924fbec3d1189a41d54dc5c9100a5d",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5300,
        "end_line": 5300
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "10219ddb39e1c66ea1a54063eca74b9762aaa7ed0fb756779c7f937d0727a084",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5304,
        "end_line": 5304
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "8ca531ccdaaa3b1fb6023271e3f3ea8c8b0e860d83b371076ee2d487867ddf14",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5311,
        "end_line": 5311
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7577fda7a6049f8ae37032db5c3dbc09613eedda9979341647b98d5b7a4d3e80",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5318,
        "end_line": 5318
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "5ee914eac6498adaae01f8861276325833ae9c7586a9f4723e1f13cfd0315255",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5318,
        "end_line": 5318
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7577fda7a6049f8ae37032db5c3dbc09613eedda9979341647b98d5b7a4d3e80",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5318,
        "end_line": 5318
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ef83ac55d3b40d072eba5d5f8b2184640cc3da0da5e65b7c956251d01396c93b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5320,
        "end_line": 5320
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2332aedc93e135913b30366c7939b5fd840824d5fc0f7eb2ae773d3aabe6a4c0",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5320,
        "end_line": 5320
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ef83ac55d3b40d072eba5d5f8b2184640cc3da0da5e65b7c956251d01396c93b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5320,
        "end_line": 5320
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "063b46a9375c2961c3fdee631034408dbc0576a80f1a83dc3a0ee5fc6d93cd0f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5322,
        "end_line": 5322
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7b649d524e47c85b6bb01d11930ab08882a51642dcaa7457b673996cce5da6e0",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5322,
        "end_line": 5322
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "063b46a9375c2961c3fdee631034408dbc0576a80f1a83dc3a0ee5fc6d93cd0f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5322,
        "end_line": 5322
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e646432792dda2f77a46d64def59a72e6d3e35c97339eb9f0305d8646b4e5a7f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5325,
        "end_line": 5325
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e646432792dda2f77a46d64def59a72e6d3e35c97339eb9f0305d8646b4e5a7f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5325,
        "end_line": 5325
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6e08baba921cd9a4e603b0fc8105d0962252c49438a7fc06051646b7fe35879e",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5332,
        "end_line": 5332
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "449e94ac40bff2585fff0ec41867a44f11747db764cd671927ca701e5bc2336d",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5335,
        "end_line": 5335
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cf064c6b7cb36c99b7e027ada76cf418b5d97fed6cec6630f3edf195dec6878b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5340,
        "end_line": 5340
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "43c0c39d7847a65c2e5d7c1e6133fdb395d635cddc9e961d3e0388ffadf0b6c0",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5380,
        "end_line": 5380
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "74491b4aeb83541d993f067ce534c8403b8b59fb41ea9e71a0028d0fbed22e7d",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5411,
        "end_line": 5411
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "1568c5c217ee8b26bc6e1c26fda85b43e05f5fac009a969f2cf5f7d8a3a9d5f4",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5427,
        "end_line": 5427
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "91951446fd5c1331ebaa606dcf136e4507542a40fd774cf41a75a1aa2c1c28c5",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5497,
        "end_line": 5497
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "511683968f712e356cc8e4d3800c7d1e72f8e3da45efda4c19a22d9d2cd5154d",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5506,
        "end_line": 5506
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a7697f0cd1b38a1f37bfb880caba63aaab90444405ccf1911c08d075b3765b85",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5532,
        "end_line": 5532
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a7697f0cd1b38a1f37bfb880caba63aaab90444405ccf1911c08d075b3765b85",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5532,
        "end_line": 5532
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cdd7128d65e090efccdf6104c13c34e7529f841e5462bd675859060004d2caab",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5534,
        "end_line": 5534
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cdd7128d65e090efccdf6104c13c34e7529f841e5462bd675859060004d2caab",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5534,
        "end_line": 5534
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "02bf35615851e94c9e4f1d897b527035e4d41a02f548034909e11330324728d9",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5539,
        "end_line": 5539
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cb61bc5928d0ad19e480e52b35551f869dfe13a5f1ffe6ce3f8bf2245b246ea6",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5540,
        "end_line": 5540
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f64f74bbedc57e80d12421472e041eed33fd04883ba46d6943a6efea1552cab0",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5541,
        "end_line": 5541
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6e7ea5f2273048080d94efb87c547fe624f1928343341b6e2efc93aebbb5f715",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5588,
        "end_line": 5588
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "aa9598554cf20e74f0a2b4f5f4fb385e51f026dfda827e94eb63d60c163fe451",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5588,
        "end_line": 5588
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "aa9598554cf20e74f0a2b4f5f4fb385e51f026dfda827e94eb63d60c163fe451",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5588,
        "end_line": 5588
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6a241790e0f45a3099109eebb127501e816a37ed14ab7427b6aef02b24ed2ff6",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5590,
        "end_line": 5590
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e0b88aa72964f1f9160aef684de3919de613bf83ed11d89065b290ff459080e5",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5590,
        "end_line": 5590
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e0b88aa72964f1f9160aef684de3919de613bf83ed11d89065b290ff459080e5",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5590,
        "end_line": 5590
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e0b88aa72964f1f9160aef684de3919de613bf83ed11d89065b290ff459080e5",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5590,
        "end_line": 5590
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e0b88aa72964f1f9160aef684de3919de613bf83ed11d89065b290ff459080e5",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5590,
        "end_line": 5590
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "df0276e9f28801a67b716bc7e26f15144b6da5b7557c158afc0390f42f62d4f2",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5640,
        "end_line": 5640
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "df0276e9f28801a67b716bc7e26f15144b6da5b7557c158afc0390f42f62d4f2",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5640,
        "end_line": 5640
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2dccb7ab6959190760cf07bc291d156973c3461b2f6cfcb28803e99f2bc0f136",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5643,
        "end_line": 5643
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "8567516e683bb77c493cdb834a2ec728470b0b947acfac6e0fea2a3eb11da297",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5645,
        "end_line": 5645
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f25a4282692e81cd11d11dfd0fa00d7feebdfac3ed1fe24d33592d94e6db4725",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5648,
        "end_line": 5648
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b7b57bd52707e3c31733aa6bc8091312c906184958da36e3e05db99627fe1685",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5663,
        "end_line": 5663
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b7b57bd52707e3c31733aa6bc8091312c906184958da36e3e05db99627fe1685",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5663,
        "end_line": 5663
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9e33dc1647aaddb336b3b930f5d1884e55a177de7e53dd5a7595ed59fa4a1807",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5668,
        "end_line": 5668
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9e33dc1647aaddb336b3b930f5d1884e55a177de7e53dd5a7595ed59fa4a1807",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5668,
        "end_line": 5668
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "254f5101ac85e3f7c8ef9b116d0e4ff33f8ec9cdb05f56dd437124f6ef791ace",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5676,
        "end_line": 5676
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "254f5101ac85e3f7c8ef9b116d0e4ff33f8ec9cdb05f56dd437124f6ef791ace",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5676,
        "end_line": 5676
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "5d6a2f733a668eab142e9967343e7e0c7c9809d1838b6664248e9f7d733e1b4f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5677,
        "end_line": 5677
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "af2eddd7a23a5c51f3fdbf697c69cc64aee604c15d7240801c8e79c7c9bd8a84",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5678,
        "end_line": 5678
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "af2eddd7a23a5c51f3fdbf697c69cc64aee604c15d7240801c8e79c7c9bd8a84",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5678,
        "end_line": 5678
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "af2eddd7a23a5c51f3fdbf697c69cc64aee604c15d7240801c8e79c7c9bd8a84",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5678,
        "end_line": 5678
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9d29d49a6e4d7e1c3736a48d39984e4a2025bb3154baf8e9653b4c6bf086bd4f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5679,
        "end_line": 5679
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9d29d49a6e4d7e1c3736a48d39984e4a2025bb3154baf8e9653b4c6bf086bd4f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5679,
        "end_line": 5679
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9d29d49a6e4d7e1c3736a48d39984e4a2025bb3154baf8e9653b4c6bf086bd4f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5679,
        "end_line": 5679
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "21929bd183d2861328cade523155ee70a4596aa2b56f6c4b94917eead08b1367",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5681,
        "end_line": 5681
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "21929bd183d2861328cade523155ee70a4596aa2b56f6c4b94917eead08b1367",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5681,
        "end_line": 5681
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "be2eb8d4a09bb7812a36610d578815cc1a7d74f98b8470adce6023a5a12358e5",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5683,
        "end_line": 5683
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "0ab1281b84ba2105b17c553da1362d06fd3ee46da946d167d3cbf3fbdd0209a7",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5686,
        "end_line": 5686
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "45c4028901c42daee1f329f43cb23441cd842b384ec47b293ee14d1bb9edb454",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5692,
        "end_line": 5692
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "45c4028901c42daee1f329f43cb23441cd842b384ec47b293ee14d1bb9edb454",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5692,
        "end_line": 5692
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "0c73f38c81349baab5aaab5f5ace73243bcfcafbd20c3f29656fcda287c725e9",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5693,
        "end_line": 5693
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "0c73f38c81349baab5aaab5f5ace73243bcfcafbd20c3f29656fcda287c725e9",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5693,
        "end_line": 5693
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "0c73f38c81349baab5aaab5f5ace73243bcfcafbd20c3f29656fcda287c725e9",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5693,
        "end_line": 5693
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "0c73f38c81349baab5aaab5f5ace73243bcfcafbd20c3f29656fcda287c725e9",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5693,
        "end_line": 5693
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "21b819d4dc7387fcffb17727d01c8e32ff56afc3e13149288543500a28c2ef97",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5695,
        "end_line": 5695
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7a296f6fcf5dcacb1962ea67437a7db98fa99d22705a81c676049a0db38c5704",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5705,
        "end_line": 5705
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "1530de5b9fad083fcda2e1c1d92579af74d5fcccca107cb8b62927f384a2a335",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5711,
        "end_line": 5711
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d1834e0522fb3d18d6d915102a87c93da63c8390311ca49ec498396b7caee2ed",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5729,
        "end_line": 5729
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "43761a0cd6ab5173adcc8cf0e5811f9fa62817d6accc8cb0e92cb03514cdf1a6",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5730,
        "end_line": 5730
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "acd6c3600fa0150f521abacd608adf80fb973b50b7ad7fb7dd9082e5ea6ebfe5",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5736,
        "end_line": 5736
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6aa41698dc25f8b024d0ef97a1fc8069bd9caff222a2370a2d98353adc68e956",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5740,
        "end_line": 5740
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "86f95188dab4b117972c8a6ed57c7c59fb3d6d5d15b68d76e19ae9715b77fee9",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5775,
        "end_line": 5775
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "0f206249cc86bd0b58d64cde5162ddeb8872c31c2bc210adcc3e6c86b9882cb2",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5790,
        "end_line": 5790
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "18ba6987453c08294a5d80a66cb8f55041578485ea154f46b70c5372f5e96f34",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5816,
        "end_line": 5816
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "af5a6cc58b6ec990e595b9f37454ba523fc163a79920726574c641d686ec2b49",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5898,
        "end_line": 5898
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "493be5c0686284ca0791e0823d6d8e02a387112ce004f04299c3867bedf55a9b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5920,
        "end_line": 5920
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "934143a7b583a1e8c6c7ba1e7a85de49fe096febba14cc282f477d27d5871075",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5932,
        "end_line": 5932
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "193ea4b643638814af9eb726f9ee17f785f11ddc80c43337127f342c05820653",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6034,
        "end_line": 6034
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a7030039b47bffd365165ff5d84c1f9876f8d08a5faa58f6de4b60114654bdfc",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6062,
        "end_line": 6062
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b6d0509e5bae283391570b7a8866df6b819b30043d66af02fce6ae1240539aa2",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6084,
        "end_line": 6084
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f775f0a3cdbc6d6918ca5da712c33304ba11e7c99777dbcad10efc3d5a25aae0",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6158,
        "end_line": 6158
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "60439d689dd847309a06dd285a28a5e53ccaa818cb78140875ef5be865bca2d2",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6209,
        "end_line": 6209
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d0aa9f67a6dbf2455e5765a0ae605a5d66b4014e85f31fa39919d93d0a2077c5",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6222,
        "end_line": 6222
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "fc3d951b116aa710049c0995be9c6719412bdd43d8f908dacf882cd46c4c05fd",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6235,
        "end_line": 6235
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "1b2a6f64ddbdc64584bfeaa5450f9759ffed0bdc038adc32d47483e15e1a3eee",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6369,
        "end_line": 6369
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "1b2a6f64ddbdc64584bfeaa5450f9759ffed0bdc038adc32d47483e15e1a3eee",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6369,
        "end_line": 6369
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "def33cd8aa7550e2a8eed2b41e83ca21ebd2ee5ef1977ebbe72aacb5d4a81aba",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 26,
        "end_line": 26
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "472392268c3c4617294b8befe451828620671bb507f34e2a695bffaf11c93e68",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6376,
        "end_line": 6376
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a55a3b7ec5e02c282b03260403bd3d5fdee658c62153efc7c16e9e4a063c19df",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6382,
        "end_line": 6382
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d5c116eddba3b4e856945ee9e2a36f145cea1d87dd0454d9885a15fd74bf665f",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6387,
        "end_line": 6387
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2e0cb1175230f55b2dab68c74f274f24608b279ad1ddaedd3278d5144916ba6d",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6388,
        "end_line": 6388
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f6a3f08853840a6a4e6f53c2f02444539308fe6c9fa1ce66e2765f4c85c064ee",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6392,
        "end_line": 6392
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f6a3f08853840a6a4e6f53c2f02444539308fe6c9fa1ce66e2765f4c85c064ee",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6392,
        "end_line": 6392
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9114e40724af366829747bf25126c57edc52201addaff5a652731a2c6ba972a8",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6518,
        "end_line": 6518
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9273adb27869bd77e8f47445efa8305b05318d9e08abb14de0a9dc1ef55d8c07",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6631,
        "end_line": 6631
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ca9b84b0786c00561df4ab683d62b5d824ab16e7bed7010bdfd96bf945836590",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6873,
        "end_line": 6873
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "090b32f550616aae7a74e467f1e7804965620eddeae9a0da5916fdcc4b35e9ec",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6893,
        "end_line": 6893
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a98cfc0b8e86b4a0a2e5f2a7544a568bf1de496756689a345070978fe3a155d7",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7144,
        "end_line": 7144
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7b1bbe77d8f3ee80b545143c5d9987cf360768d21fbd4a40ca5a36304fcec748",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7145,
        "end_line": 7145
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e1435a5c36d3c2023c745171de2683ce12993284bf612e4c74decb2be7660bbc",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7147,
        "end_line": 7147
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "5746c0c652db40cbe286c3829f639a99ed66ac80743d7574e21970c134ae37ef",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7160,
        "end_line": 7160
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7643fa32d294b744a302acd16212e0135329cbdc7542b4e8967636df7922d7d1",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7161,
        "end_line": 7161
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2a17761c431f447cb4fe7fb2101b0f88eb975f0bd50dbd5021c039a035215535",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7162,
        "end_line": 7162
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "db0c2b4fe7d01ce534665e51c830d7179407f510b421cfc163a0ba5dc9f1e805",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7166,
        "end_line": 7166
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "04d2f9c61bc4ce3f1df62ae50f117152697c78bb08a80790c181ad72c9103e01",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7179,
        "end_line": 7179
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7df6f41a8960cbe20c45751d0517105af7f5f4490c6d1c5a71a19dd5016e5c67",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7180,
        "end_line": 7180
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e71f7a143f2caa62f4bb6acc2ab409a0236081f8ba529e9cdffd138ac3178df6",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7189,
        "end_line": 7189
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f47ffd23c84c747e6dd9e91b424c56e21f6c987870532c0543b705b7596f9f5a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7191,
        "end_line": 7191
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b5d7f8826611062245e66e6b125f837a2a0c7042d5d2399788b76fe3ffc33e64",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7193,
        "end_line": 7193
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "13c2cacb547190cc0f92e28849234c193b92f96de09ece74375c33b6e2512608",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7199,
        "end_line": 7199
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "114ddfdaafab8147c7b6393bad1118e65de5dc3f53cf3f0f47a56159c205f775",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7201,
        "end_line": 7201
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "aff48f3cdf69f06ff8cc1f8bae2d48ff8ec7701b7f7c774a199c61a9e7be0b09",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7206,
        "end_line": 7206
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "8b5633e47d3f853ce29a13edf54b3c514616d61dc06a87426af80f6f082c835b",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7253,
        "end_line": 7253
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "c8f8a4878eabb477e84e0d4e01a892e67448587af0a82a22708dd1b7456c0383",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7298,
        "end_line": 7298
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "81e08d2c631ed3e6e32d29882d19f7f3ca83f16f40b87a869fe007648d4ef803",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7301,
        "end_line": 7301
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ad487813af3aaa39b0b7748e8f5c36f0a3b52b2e95486262a012308b3b80bcc0",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7307,
        "end_line": 7307
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "87d643be93560658a45afd2e0947606a43254a0438612a7583f6e6d152114914",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7309,
        "end_line": 7309
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "5182f411d3b53637cf85bbdda2b9f73aa7004ae2f9ceb37e8d75ba439cab1eb3",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7315,
        "end_line": 7315
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d6ec9cf51cb3347708dac0f294b707eee7b4755bac02dc7854b241f8b957df65",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7317,
        "end_line": 7317
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "751d957b9d3eb2517966be2c533286b670f43ed5bdf8f1cc7e5dd91483856d8f",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7326,
        "end_line": 7326
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "97d2140a686df075e53749f073a989ffeef7ebdcefe0640ba7f2ca4fdd666906",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7333,
        "end_line": 7333
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "20fe3c6965b1b9212652a4d30c5d0095a940d042a26bb83ca38a52c572063e32",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7342,
        "end_line": 7342
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "db221bbafd7a237a72fb958bfab728b4b906e8cd9111304fbe32976f7ba8a378",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7343,
        "end_line": 7343
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "66ab4eb27c0ea8f539a320c72cf8216da33ec404347b1ac85867bd07b169b8cc",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7344,
        "end_line": 7344
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "aba3168d2baa41216775c914ab09dd05b863f987278d17c12a1b364496bdf45c",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7357,
        "end_line": 7357
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f8c13c8773d356630616835d85f348e407ed5bdbbcb168d4765ed7b14e30c8ec",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7360,
        "end_line": 7360
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "459cd12c9900cadc1fe0065d813cd596ccbf50a6935bfbc41ecbb77c0122f752",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7397,
        "end_line": 7397
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "0d7be346ea4be71b96f213d9fc4d3b133a8da44aec75f17e918658e02fd72675",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7522,
        "end_line": 7522
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "8a085f9c4129f1b886c2cee69a1b81b1d413ed9e0f749b2e089cc2199baa3d46",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7559,
        "end_line": 7559
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e1ed5232094642e7f42558e12e5f9bc27a288b7732b79e6d03712fb2547ddd9b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7564,
        "end_line": 7564
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9e9bed790cd42e43651e2194cfc139b27069ba21710c92f1b0d92b0dd9976a34",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7581,
        "end_line": 7581
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d368d77957646c9a2ac4363d5a216d55567f548f571fdf0c2d35d029a456a035",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7624,
        "end_line": 7624
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "22062b6fdf49244c00064ba2b0858ed74c41d1a058e14297eaaeca67b3eeb6cc",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7625,
        "end_line": 7625
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "0138869de71b7024115f453880fd2456439d56bca77ef68c02496837344a2567",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7687,
        "end_line": 7687
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "01f584ec34b1e45be92218fbe7568af89c1abad57f829fb3ee24deb8e25b17b0",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7687,
        "end_line": 7687
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "01f584ec34b1e45be92218fbe7568af89c1abad57f829fb3ee24deb8e25b17b0",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7687,
        "end_line": 7687
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7ad2ba7c8b7815e2e0d313db5c6fdabed65841105271b8542e437b7f76879db3",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7692,
        "end_line": 7692
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "69934d3dcea72e4f55c7e44c12b0040de6a324650ec5f3a737582512ca9513e9",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7696,
        "end_line": 7696
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "5e05652672f3242c97698d623cbd25d44fe6bf51445138a19a3e419523816a95",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7704,
        "end_line": 7704
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "5e05652672f3242c97698d623cbd25d44fe6bf51445138a19a3e419523816a95",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7704,
        "end_line": 7704
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "589593eefb6dff169cc364fc24dcd265361ebce3b9152be1c9c0c7a953708c21",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7706,
        "end_line": 7706
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "726e31478886a458ceccf52645044cf163038cc293fded455d4d98f7edf3a49e",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7707,
        "end_line": 7707
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a79e432e094a8e8fa65435966ac7fd05dd5a8b07dc2cce85f5efec605e50fef8",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7955,
        "end_line": 7955
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ca86fbd9b25bcf9296bbf7a1a0c5764eba9ccd441ba5b1a42f60a67ca53da371",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 7983,
        "end_line": 7983
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "5e5b0204b789bf965c49c0227f8b8c68c9a8887c44c8594d4916e0a17308b4ed",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 6375,
        "end_line": 6375
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "731c2ea0c5745c94e741dd7e2c235b13291537c73dd52b71ffb73a26fb42a475",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 5085,
        "end_line": 5085
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b779d10d100d75f1fd451055ff91d4f15d30e2c0d1f52861f22e4c455ed180f6",
      "category": "sast",
      "name": "Unsafe Regular Expression",
      "message": "Unsafe Regular Expression",
      "description": "Potentially unsafe regular expressions. It may take a very long time to run.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-unsafe-regex",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 4830,
        "end_line": 4830
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-unsafe-regex",
          "value": "security/detect-unsafe-regex",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-unsafe-regex"
        }
      ]
    },
    {
      "id": "f8c12e558cd4fae9267e3af860b54cc60ab3683bb5094e9a595ae7f598503567",
      "category": "sast",
      "name": "Unsafe Regular Expression",
      "message": "Unsafe Regular Expression",
      "description": "Potentially unsafe regular expressions. It may take a very long time to run.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-unsafe-regex",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1956,
        "end_line": 1956
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-unsafe-regex",
          "value": "security/detect-unsafe-regex",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-unsafe-regex"
        }
      ]
    },
    {
      "id": "c4ca036043b4ade996ee7e471ca1d934f9a192bf6a4e1b01c9208bc752105368",
      "category": "sast",
      "name": "Unsafe Regular Expression",
      "message": "Unsafe Regular Expression",
      "description": "Potentially unsafe regular expressions. It may take a very long time to run.",
      "cve": "assets/js/d3.v3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-unsafe-regex",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/d3.v3.js",
        "start_line": 1628,
        "end_line": 1628
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-unsafe-regex",
          "value": "security/detect-unsafe-regex",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-unsafe-regex"
        }
      ]
    },
    {
      "id": "00c88329c482d5adcd3f94315724d33d35b5fdda29deb972350ca46194bdc93a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 2249,
        "end_line": 2249
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "96aa91fa3a3b660efb952b84655752738635e680efc8077c4b5b679f6b0246bc",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 343,
        "end_line": 343
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "719e0d68126d1683470f0c1e25644120c64bce22133bb8eb042c50a767317b11",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 349,
        "end_line": 349
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e3792ba8d91e1402d514c8674addec0a1c156d92a08a3903a0d65dd441b47a11",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 916,
        "end_line": 916
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "edf24341d5e037d12564d5b690be18c3a56495842159579b9cc891cd059c3e82",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 917,
        "end_line": 917
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "759884abc3d7a22c03bf66f3ec89fc65b913de4f18dee8e969d227d79dd67380",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 917,
        "end_line": 917
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "edf24341d5e037d12564d5b690be18c3a56495842159579b9cc891cd059c3e82",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 917,
        "end_line": 917
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a4f47785a0068c66a9708ae55302149691dc1fd6aa23a34fe7da74547e5c8e08",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 987,
        "end_line": 987
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "75b80ee2ee1b260eba1dcdddabcb47b63c15cf14177c73ace5edbe437d21c65e",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 988,
        "end_line": 988
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "60062441db70da39e1fb0d5c023e0b653baa5754ef5dc7ca852f085ff5e2c493",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 1099,
        "end_line": 1099
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "023e48fa42944ce793ccf5a33c6c569544a97ccf94463e7c03bfb7c77282d641",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 1187,
        "end_line": 1187
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e31521fe37ac8257225c34bd11c60b1929afc220947f7eda735885c148e207aa",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 1229,
        "end_line": 1229
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a27583f0bae037999939cb8cb834a3de58bc0c7008e55aae60163ccf5b0db33b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 1583,
        "end_line": 1583
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "8a35c4cb66d27cfc55990b8b5621e0be6a5e97ce3e2f223ac3ad0eb9ba4ae088",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 1592,
        "end_line": 1592
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d4a372f049658ba541afe58b5f8bdaa43d8e210326d84acfa12648c056dbf5ab",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 2248,
        "end_line": 2248
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "00c88329c482d5adcd3f94315724d33d35b5fdda29deb972350ca46194bdc93a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 2249,
        "end_line": 2249
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6c756e3ab2fdef35bac0b69bc057b716bb46c89e961ea47dbf0a17366f0340f5",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 62,
        "end_line": 62
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "939bbfe33b484cd7ee6fee35fc3ca9ac7e26708aa6cf46c5c0c4079b2af53256",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 2251,
        "end_line": 2251
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "939bbfe33b484cd7ee6fee35fc3ca9ac7e26708aa6cf46c5c0c4079b2af53256",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 2251,
        "end_line": 2251
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "26451a0bf16c12aba85d2162696d4f1ef4ce7cf9598fe9b69f9dee0fbbbab158",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 2454,
        "end_line": 2454
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "26451a0bf16c12aba85d2162696d4f1ef4ce7cf9598fe9b69f9dee0fbbbab158",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 2454,
        "end_line": 2454
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "dcb631c2da9beba6ff1117c7dcf423a4489b5d94187fbd508509b9b63eb3152b",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 2629,
        "end_line": 2629
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "824633209d63435d34734805a24f326ecad701d9e3fce3d8363d3842a06df723",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 2651,
        "end_line": 2651
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6867705a1de06919f5d61a5afad5fab7010227a8bbf703d4def3001fd12bdf66",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 2688,
        "end_line": 2688
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "1ad1336604ec6804413a912868107e06983e3e407b58c7b53ff8891627b51021",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 2887,
        "end_line": 2887
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ac71b21b334f6687297860d4ac6b20d16f6e8c311224ce5027824abfeff7a599",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 3607,
        "end_line": 3607
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "dfae7d4e7fb18bc09e9a8a5b7ca40eeefb456bcc39b4b344cc294f254f7a65a7",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 4173,
        "end_line": 4173
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ac7a86ef57ffcb5e74b127e52fd469367a6b4db445793ec60f8c3d716f655f9b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 4174,
        "end_line": 4174
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ac7a86ef57ffcb5e74b127e52fd469367a6b4db445793ec60f8c3d716f655f9b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 4174,
        "end_line": 4174
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3359d225e396f98adcb3f358927167b469d1b5c24f414684a0aab4b046eb9f2b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 4176,
        "end_line": 4176
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3359d225e396f98adcb3f358927167b469d1b5c24f414684a0aab4b046eb9f2b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 4176,
        "end_line": 4176
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d5a5c4c5f0fa984bf15a66488570aaac315f584723fe4166f3412f8b12b719a6",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 4266,
        "end_line": 4266
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6a667af7552fdbc6ed72f87d3073eb97908f4e04fb92cd7e7630c50d873f77aa",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 4347,
        "end_line": 4347
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f6ebf1b263edfccc4c345bb52536b885afd5bae8a1a1b5e597cf1b81aeedb50a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 4955,
        "end_line": 4955
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f6ebf1b263edfccc4c345bb52536b885afd5bae8a1a1b5e597cf1b81aeedb50a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 4955,
        "end_line": 4955
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "0218f6a60dd102ceddae709bb025095cb7a90599a0efe28d09200c9545db1ce6",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 4966,
        "end_line": 4966
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9cf640dd8e8fd90fbcf03d0ddb25bd890ae91a2e335f98500a78607e63d0528c",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 4967,
        "end_line": 4967
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "0f9e8f116445f16c9dd3d7bf2a897f82b75e8244612e8db2692dfeec9d6fd159",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 4977,
        "end_line": 4977
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "bf05405d70e7c1d217027fad3f6c2fe899e3e5480fc45c46405c9e253c89570a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 4978,
        "end_line": 4978
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a148da08ba64c7c5bb3f23dc7111b7ad619be08299267d27ca1ab75c26c0c13a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 5471,
        "end_line": 5471
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "5afd633fdff3c0c30c57f4b9d7b2ec4c134feef58ddf43ff2112e59904f6d7dc",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 5472,
        "end_line": 5472
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "5afd633fdff3c0c30c57f4b9d7b2ec4c134feef58ddf43ff2112e59904f6d7dc",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 5472,
        "end_line": 5472
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "8686ff874a19f11d164c951a82c5aef4a114d843f685dad825c4f25697b0e3bc",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 5474,
        "end_line": 5474
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "8686ff874a19f11d164c951a82c5aef4a114d843f685dad825c4f25697b0e3bc",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 5474,
        "end_line": 5474
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9171d804130bdbbb99359930158e79d10b04ea68b6d92fb128cd7d308906edcc",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 5577,
        "end_line": 5577
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "1a85067112de3b6beb823fa39b5916e15e3fae7d8565e90b085456af486fa962",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 5638,
        "end_line": 5638
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "0bb402b5a77e011a3c7c0adb9fd59865b7c2949c1d87d25185ed84ba54694d8d",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 5659,
        "end_line": 5659
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "17a667bf038458cd59630a08b3ee7cbfeb0b459589a050a4db5c42a7ff8614ed",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 5695,
        "end_line": 5695
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7612d357828db006622cca019477cfd529254a5ad85581bb75ba41e9b590749b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 5950,
        "end_line": 5950
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2a0c5e536e3379eaf2251a39ba12121e9f459bcd316dab0aa27bddc589ce64c0",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 5951,
        "end_line": 5951
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2a0c5e536e3379eaf2251a39ba12121e9f459bcd316dab0aa27bddc589ce64c0",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 5951,
        "end_line": 5951
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2606725fe16905e96e5638ab30996210d9e433734c5bc9ca7a609671a054915b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 5953,
        "end_line": 5953
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2606725fe16905e96e5638ab30996210d9e433734c5bc9ca7a609671a054915b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 5953,
        "end_line": 5953
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d5786792d21bb24e8dcf8be23f022f85adc899154c067da9ddce7139e5437fd0",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 6051,
        "end_line": 6051
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "d5786792d21bb24e8dcf8be23f022f85adc899154c067da9ddce7139e5437fd0",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 6051,
        "end_line": 6051
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "93f13483d509f138966e491b2f5c61f317e997bc80bd97acb620ce50dcc03b23",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 6058,
        "end_line": 6058
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "93f13483d509f138966e491b2f5c61f317e997bc80bd97acb620ce50dcc03b23",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 6058,
        "end_line": 6058
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cbfae0b6ce7c6ebd6a124a76b83ece9d2ff7aca34761886798fc836a796c7cfa",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 6135,
        "end_line": 6135
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "90eb7b4e5da4099cf3c7dc32f8aad49427f98229a9a5eaf287e3fa6293a0af7c",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 6476,
        "end_line": 6476
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a9ec4acef47273f14d8e50c764a87ea8fe05628c7e02bedb272683943933cb29",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 6490,
        "end_line": 6490
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a1595f38c92fe6b26f3516c6776ae22a5a949a10757fd62e7b9ab611202ee5b7",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 7103,
        "end_line": 7103
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a1595f38c92fe6b26f3516c6776ae22a5a949a10757fd62e7b9ab611202ee5b7",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 7103,
        "end_line": 7103
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4dedfdcb0124eae9f45e4851eb34e69e730ed8be646b0acbb46bd1b65f645b69",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 7110,
        "end_line": 7110
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4dedfdcb0124eae9f45e4851eb34e69e730ed8be646b0acbb46bd1b65f645b69",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 7110,
        "end_line": 7110
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cf49de79b8980214ac5445e4b68c82d860bc51e43fe5eded746c9c829db70882",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 7275,
        "end_line": 7275
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cf49de79b8980214ac5445e4b68c82d860bc51e43fe5eded746c9c829db70882",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 7275,
        "end_line": 7275
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3709c47a0ace48e60442ca90f12ff72ae74c12da4050d58c092cbd4520b31945",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 7283,
        "end_line": 7283
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "3709c47a0ace48e60442ca90f12ff72ae74c12da4050d58c092cbd4520b31945",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 7283,
        "end_line": 7283
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7c7f6e13929c20085c8b2d096eaf02f1c72e5acd9b13627a2e1e77403dc55e48",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 7602,
        "end_line": 7602
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6db9bb7a5c383fb2d681e21619c4a4c5f941ffee381fdac5fcea7ba72bf4cc1a",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 7778,
        "end_line": 7778
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "c03bb2b4e5ef5ab967c40e0220d94fcc870e2946c6a5e83f17ebec16546c8869",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 7778,
        "end_line": 7778
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "8915b1a97aff424e4735df71347274cc1e41ce7ea932e9743e316fad0fd4964f",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 7779,
        "end_line": 7779
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6883926f52d5bd5e801bfed96c6a2cf97285ed69ec4b825f6f87f22facd89681",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 7779,
        "end_line": 7779
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b676319a9294e0a4c4e45c09dbfe5f5174be169b98f9f9f8d88a57227660b7e2",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 8071,
        "end_line": 8071
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "31535fd208f259089b1feded8463cae042f97828b701940e393e6e42830811a0",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 8072,
        "end_line": 8072
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "31535fd208f259089b1feded8463cae042f97828b701940e393e6e42830811a0",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 8072,
        "end_line": 8072
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "5ec899597387529a01732af502dd65d341efc0be40aeaa6b6521c4625f08514e",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 14044,
        "end_line": 14044
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9eef27afb6194abe8715ae4b6d9dfe58e1c843e12f6468e8d7ba3b185a751aa6",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 8074,
        "end_line": 8074
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "8cacc631d0169df15520b14964d281c2411f6c23e68283bc502c96437f496e14",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 8189,
        "end_line": 8189
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6cfed333d1afa7a764adbf5a07856badb1fb84cb23fecc08b9fb2328426095c0",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 8316,
        "end_line": 8316
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b8fdc37da163b7dfa93c2e524b9b0c058de888324e89369c21896b0e1adfab59",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 8574,
        "end_line": 8574
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b00e22fe655910c17af0534869531acfa30553a2e1e8fb0b65f9c664346d8c2a",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 8739,
        "end_line": 8739
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "fc71b73b7559c005ebf76b006a7f677a92469cb1a3586dce17fdae6b355b6593",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 8739,
        "end_line": 8739
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e65775026175349e06ce604803dc3f1d5f28c9dae1f9309d5aa7f510b0326a4f",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 8740,
        "end_line": 8740
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f244aa220940cc6045e40202cd546ff4d483f5afb2ae17fa611f4ca82ed96b35",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 8740,
        "end_line": 8740
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cc4d3fc921668ece95507224d748e6b88074988731badbcd3715f3984f15e6a5",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9016,
        "end_line": 9016
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4f19340fd07bde78e382caaabf9a78b12c92d18e9d8f4d3198651b01ef717dee",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9017,
        "end_line": 9017
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4f19340fd07bde78e382caaabf9a78b12c92d18e9d8f4d3198651b01ef717dee",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9017,
        "end_line": 9017
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ed7111a720041b32690ece49e862431e6331e011c4aa22e4ca116ce83a1764cd",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9019,
        "end_line": 9019
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ed7111a720041b32690ece49e862431e6331e011c4aa22e4ca116ce83a1764cd",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9019,
        "end_line": 9019
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ba71f96904fe793944020f1a533c139ffd439beb1cff4b6fd712a69b1b87aada",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9131,
        "end_line": 9131
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "69f67b0aa9102142cf36151603fe13b2e2c393b52e4a7f4c447c59234c4fb6eb",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9216,
        "end_line": 9216
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b0f3e597de75e95b99240f4a3d89ab90aa5501f6015151e6b9fe5dedc071a428",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9495,
        "end_line": 9495
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b0f3e597de75e95b99240f4a3d89ab90aa5501f6015151e6b9fe5dedc071a428",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9495,
        "end_line": 9495
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b0f3e597de75e95b99240f4a3d89ab90aa5501f6015151e6b9fe5dedc071a428",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9495,
        "end_line": 9495
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "dc20243ba8f9934d8a372782910dca5284ad9f6bc145fbd72be8ebffb3c0c224",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9503,
        "end_line": 9503
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "dc20243ba8f9934d8a372782910dca5284ad9f6bc145fbd72be8ebffb3c0c224",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9503,
        "end_line": 9503
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "dc20243ba8f9934d8a372782910dca5284ad9f6bc145fbd72be8ebffb3c0c224",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9503,
        "end_line": 9503
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e06410431f60dacc6f455319ea8d8409810c739bf727c386e6786329ce8c2d74",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9510,
        "end_line": 9510
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e06410431f60dacc6f455319ea8d8409810c739bf727c386e6786329ce8c2d74",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9510,
        "end_line": 9510
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e06410431f60dacc6f455319ea8d8409810c739bf727c386e6786329ce8c2d74",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9510,
        "end_line": 9510
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f100ca64a93df6528cf6f88ad390d98f9605e2439c5521d26c6e4d2c0b87e7f8",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9517,
        "end_line": 9517
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f100ca64a93df6528cf6f88ad390d98f9605e2439c5521d26c6e4d2c0b87e7f8",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9517,
        "end_line": 9517
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f100ca64a93df6528cf6f88ad390d98f9605e2439c5521d26c6e4d2c0b87e7f8",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9517,
        "end_line": 9517
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6b69eb238ff3f55131b31d39967e7887e3d4e72c5915e8af739e106bf139cfad",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9524,
        "end_line": 9524
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6b69eb238ff3f55131b31d39967e7887e3d4e72c5915e8af739e106bf139cfad",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9524,
        "end_line": 9524
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6b69eb238ff3f55131b31d39967e7887e3d4e72c5915e8af739e106bf139cfad",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9524,
        "end_line": 9524
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cc4715674b4b5965e6ad9ed25c53e422285fafae80d4880e34e63b984fec0fa4",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9531,
        "end_line": 9531
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cc4715674b4b5965e6ad9ed25c53e422285fafae80d4880e34e63b984fec0fa4",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9531,
        "end_line": 9531
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "cc4715674b4b5965e6ad9ed25c53e422285fafae80d4880e34e63b984fec0fa4",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9531,
        "end_line": 9531
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4edcd98b9f6c3b97fb4b12c765bcba523c8264bb33268516a3ba2084aea036f7",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9551,
        "end_line": 9551
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "296d2256ecb8271ffbd04bf5ab37a9bade14c13ddf4da24bdd567f75a67d5e5a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 9554,
        "end_line": 9554
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7f5642776247c3c2235086f571058d9894ffa21c1f68bc11187a869a74d08a76",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 10410,
        "end_line": 10410
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ce71a71d440d996ce2be23b3446cba9a7715803aae1a9b12ab41e5e69557f70b",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 10655,
        "end_line": 10655
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4108eb06f22f0345a8efe603c200a2aec996c2655b2ebe32c003d3d0ff974723",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 10656,
        "end_line": 10656
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "4108eb06f22f0345a8efe603c200a2aec996c2655b2ebe32c003d3d0ff974723",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 10656,
        "end_line": 10656
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7326e2cbd7a75877f14159f5d6b5db7fcb099e67683e48543b025f522ff16d9d",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 10658,
        "end_line": 10658
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7326e2cbd7a75877f14159f5d6b5db7fcb099e67683e48543b025f522ff16d9d",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 10658,
        "end_line": 10658
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "022424e43696da304eb7836a5236127ed8622720b0900e5e725be98842e0b3b2",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 10762,
        "end_line": 10762
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "1b4a40501d798011074b367d50c92c1ee1ac02c68253ed03d72329b1a042fce8",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 11109,
        "end_line": 11109
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "837a9f67fcf0f40d84356a1f3e09d7007274a7b3156d1c36af546016a92e2aa2",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 11110,
        "end_line": 11110
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "1c312329f99683e3f05f998ef1d2f7a3c2f701961cd468ae2b84b2f5c2e991e1",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 11177,
        "end_line": 11177
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "68d7222e0254ffc95694c46d111368c39fff31b91e885ae2eed11db96a6c6a7b",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 11190,
        "end_line": 11190
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f82f9b22ce177725ad2523366d76c47015b9c11f01afd4052242d355b1481480",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 11203,
        "end_line": 11203
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "63dded8cfd310edcfef3b1805baf2340cfb324c930a195d32f690b8095a3a341",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 11677,
        "end_line": 11677
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7791fbb871bfc64133b3139554c86dbacf7e1a6c373487c8df1c59375904f065",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 11678,
        "end_line": 11678
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7791fbb871bfc64133b3139554c86dbacf7e1a6c373487c8df1c59375904f065",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 11678,
        "end_line": 11678
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "34a4488a73d8d4df05f43559f22bf945eacdbca92933eb145e61f35fb5da6806",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 11680,
        "end_line": 11680
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "34a4488a73d8d4df05f43559f22bf945eacdbca92933eb145e61f35fb5da6806",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 11680,
        "end_line": 11680
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "b9037ee4b28f9c84d967e44e4e1871028037931713acf59938f9948595ade3fd",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 11791,
        "end_line": 11791
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "6ff78d78312b9422fa243dcc84f2c675bd1f36b6e68811981477c5903e2d201c",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 11856,
        "end_line": 11856
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "c1cc102bac0c3f46482052dff0d432a2ba6d31d40b75e4c44bbc7089a3adc8c7",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 11872,
        "end_line": 11872
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9da6c1ae652626cbf70d27d7ec06c0cab3b01ddc909b1c47c125255584810f92",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 11981,
        "end_line": 11981
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2b8247395c63b5fbbe52b8f9e81de32ffe18f5624796ab052b2a2fea11609500",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 12304,
        "end_line": 12304
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "61fe40d37e1a2d8df5be8a53ac44b1c1e807e4027a87627b2067471597738ca9",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 12305,
        "end_line": 12305
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "61fe40d37e1a2d8df5be8a53ac44b1c1e807e4027a87627b2067471597738ca9",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 12305,
        "end_line": 12305
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e91cdedad1bb40e4d5d374f19e8b3044fd6b5bf36468671a957812f2f733fc5c",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 12307,
        "end_line": 12307
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e91cdedad1bb40e4d5d374f19e8b3044fd6b5bf36468671a957812f2f733fc5c",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 12307,
        "end_line": 12307
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "eeca3298912d566812bec20e5428038a4adbe37795b03edd36f1b212e2358f19",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 12421,
        "end_line": 12421
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "5ac9118c8fe90da333f44bdeb1505a82032da2c95c32126da07aa494db956635",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 12486,
        "end_line": 12486
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "ef46c517f280c730e37f0d887df71352f8a91ff1824704cb04f4cbf85f5cddba",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 12502,
        "end_line": 12502
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "426ed75a1fb9aa2d3145551a5e5f75d5b40dbea0e3c87e13dfefd3462ef6dba5",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 12613,
        "end_line": 12613
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "2b363e2d0b5a7dccbc5ca4b6e13cc7581bc0c92226c89e292e3d40ed97aea090",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 12880,
        "end_line": 12880
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "7e2ceb72d54848afa3b1dbad73c19bf897a8d0fe74ffa662a772b0f26229d1b4",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 13157,
        "end_line": 13157
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a27538e95597556c88492961628a6a2a8ce26eaf8d8c309a032752e12fcc9b32",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 13202,
        "end_line": 13202
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "a14a4f797ffb866d6d5fbec5d9b8ab8e8d232da146e21fa8137b10db7e93f17a",
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 13203,
        "end_line": 13203
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "f8c5d70f1b162981f1e8d12e000fd0f2b0d2f2378c4fa34aaacb7c2f5a53be5a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 13728,
        "end_line": 13728
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "eba00287522f35d1020b68fd1c4f7f70a029e0887fd3671b2736b37033ee68c9",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 13729,
        "end_line": 13729
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "eba00287522f35d1020b68fd1c4f7f70a029e0887fd3671b2736b37033ee68c9",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 13729,
        "end_line": 13729
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "fa312def6ea0c22e3d11c62c10d1264fa69bbebd3ae74993f3194eb3d96d177a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 13731,
        "end_line": 13731
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "fa312def6ea0c22e3d11c62c10d1264fa69bbebd3ae74993f3194eb3d96d177a",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 13731,
        "end_line": 13731
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "e7f056edf576e3aecd5820fa60831c4c43f0c0fd9f66f26b311c17a6b514fd72",
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 13981,
        "end_line": 13981
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "39ad707168c1c0a6d07c5c048f31b74148ba6c8d67be76d1eebe3086a62611b2",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 14007,
        "end_line": 14007
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "id": "9eef27afb6194abe8715ae4b6d9dfe58e1c843e12f6468e8d7ba3b185a751aa6",
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "assets/js/nv.d3.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "assets/js/nv.d3.js",
        "start_line": 8074,
        "end_line": 8074
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    }
  ],
  "remediations": [],
  "scan": {
    "scanner": {
      "id": "eslint",
      "name": "ESLint",
      "url": "https://github.com/nodesecurity/eslint-plugin-security",
      "vendor": {
        "name": "GitLab"
      },
      "version": "7.5.0"
    },
    "type": "sast"
  }
}
